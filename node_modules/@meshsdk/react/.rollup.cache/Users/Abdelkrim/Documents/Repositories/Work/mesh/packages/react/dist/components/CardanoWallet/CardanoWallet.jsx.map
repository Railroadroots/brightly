{"version":3,"file":"CardanoWallet.jsx","sourceRoot":"","sources":["../../../src/components/CardanoWallet/CardanoWallet.tsx"],"names":[],"mappings":"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","sourcesContent":["import tw, { styled } from 'twin.macro';\nimport { useEffect, useState } from 'react';\nimport { useWallet, useWalletList } from '@mesh/hooks';\nimport { MenuItem } from '../MenuItem';\nimport { WalletBalance } from './WalletBalance';\n\nconst StyledMenuButton = tw.button`\n  flex items-center justify-center\n  font-normal text-lg\n  border rounded-t-md\n  w-60 px-4 py-2\n  shadow-sm\n`;\n\nconst StyledMenuList = styled.div(({ hidden }: { hidden: boolean }) => [\n  tw`\n    shadow-sm backdrop-blur\n    border rounded-b-md\n    absolute w-60\n    text-center\n  `,\n  hidden && tw`hidden`,\n]);\n\nexport const CardanoWallet = ({\n  label = 'Connect Wallet',\n  onConnected = undefined\n}: {\n  label?: string,\n  onConnected?: Function\n}) => {\n  const wallets = useWalletList();\n\n  const [hideMenuList, setHideMenuList] = useState(true);\n\n  const { connect, connecting, connected, disconnect, name } = useWallet();\n\n  useEffect(() => {\n    if (connected && onConnected) {\n      onConnected();\n    }\n  }, [connected]);\n\n  return (\n    <div\n      style={{ width: 'fit-content' }}\n      onMouseEnter={() => setHideMenuList(false)}\n      onMouseLeave={() => setHideMenuList(true)}\n    >\n      <StyledMenuButton\n        type=\"button\"\n        className=\"mr-wallet-button\"\n        onClick={() => setHideMenuList(!hideMenuList)}\n      >\n        <WalletBalance\n          name={name}\n          connected={connected}\n          connecting={connecting}\n          label={label}\n        />\n      </StyledMenuButton>\n      <StyledMenuList\n        hidden={hideMenuList}\n        className=\"mr-menu-list\"\n      >\n        {!connected && wallets.length > 0 ? (\n          wallets.map((wallet, index) => (\n            <MenuItem\n              key={index}\n              icon={wallet.icon}\n              label={wallet.name}\n              action={() => {\n                connect(wallet.name);\n                setHideMenuList(!hideMenuList);\n              }}\n              active={name === wallet.name}\n            />\n          ))\n        ) : wallets.length === 0 ? (\n          <span>No Wallet Found</span>\n        ) : (\n          <>\n            <MenuItem\n              active={false}\n              label=\"disconnect\"\n              action={disconnect}\n              icon={undefined}\n            />\n          </>\n        )}\n      </StyledMenuList>\n    </div>\n  );\n};\n"]}